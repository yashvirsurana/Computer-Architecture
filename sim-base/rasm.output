Terminals unused in grammar

   INVALID_REGISTER


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements NEWLINE statement

    4 addressable: dataelement
    5            | instruction

    6 dataelement: word
    7            | byte
    8            | space
    9            | ascii
   10            | asciiz
   11            | error

   12 labeldec: /* empty */
   13         | LABELDECL

   14 offset: INTEGER '(' REGISTER ')'
   15       | '(' REGISTER ')'
   16       | error

   17 rsrc1: REGISTER
   18      | error

   19 rsrc2: REGISTER
   20      | error

   21 rdest: REGISTER
   22      | error

   23 address: INTEGER
   24        | LABELREF
   25        | error

   26 statement: TEXT_SECTION
   27          | DATA_SECTION
   28          | labeldec
   29          | labeldec addressable
   30          | SECTION_IDENT

   31 $@1: /* empty */

   32 $@2: /* empty */

   33 instruction: ADDI $@1 rdest ',' rsrc1 $@2 ',' INTEGER

   34 $@3: /* empty */

   35 instruction: ADD $@3 rdest ',' rsrc1 ',' rsrc2

   36 $@4: /* empty */

   37 $@5: /* empty */

   38 instruction: SUBI $@4 rdest ',' rsrc1 $@5 ',' INTEGER

   39 $@6: /* empty */

   40 $@7: /* empty */

   41 instruction: BRANCHGE $@6 rsrc1 ',' rsrc2 ',' $@7 address

   42 $@8: /* empty */

   43 $@9: /* empty */

   44 instruction: BRANCHNE $@8 rsrc1 ',' rsrc2 ',' $@9 address

   45 $@10: /* empty */

   46 instruction: LOADBYTE $@10 rdest ',' offset

   47 $@11: /* empty */

   48 $@12: /* empty */

   49 instruction: LOADADDR $@11 rdest ',' $@12 address

   50 $@13: /* empty */

   51 $@14: /* empty */

   52 instruction: BRANCHEQZ $@13 rsrc1 ',' $@14 address
   53            | LOADIMMED rdest ',' INTEGER

   54 $@15: /* empty */

   55 instruction: BRANCH $@15 address
   56            | SYSCALL
   57            | NOOP
   58            | LABELREF

   59 word: WORD integers
   60     | WORD error

   61 byte: BYTE bytes
   62     | BYTE error

   63 space: SPACE INTEGER
   64      | SPACE error

   65 ascii: ASCII STRING
   66      | ASCII error

   67 asciiz: ASCIIZ STRING
   68       | ASCIIZ error

   69 integers: INTEGER
   70         | integers INTEGER

   71 bytes: INTEGER
   72      | bytes INTEGER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 15
')' (41) 14 15
',' (44) 33 35 38 41 44 46 49 52 53
error (256) 11 16 18 20 22 25 60 62 64 66 68
NEWLINE (258) 3
TEXT_SECTION (259) 26
DATA_SECTION (260) 27
LABELDECL (261) 13
INTEGER (262) 14 23 33 38 53 63 69 70 71 72
LABELREF (263) 24 58
REGISTER (264) 14 15 17 19 21
INVALID_REGISTER (265)
ADDI (266) 33
ADD (267) 35
SUBI (268) 38
BRANCH (269) 55
BRANCHEQZ (270) 52
BRANCHGE (271) 41
BRANCHNE (272) 44
LOADADDR (273) 49
LOADBYTE (274) 46
LOADIMMED (275) 53
SYSCALL (276) 56
NOOP (277) 57
WORD (278) 59 60
BYTE (279) 61 62
SPACE (280) 63 64
ASCII (281) 65 66
ASCIIZ (282) 67 68
STRING (283) 65 67
SECTION_IDENT (284) 30


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
statements (35)
    on left: 2 3, on right: 1 3
addressable (36)
    on left: 4 5, on right: 29
dataelement (37)
    on left: 6 7 8 9 10 11, on right: 4
labeldec (38)
    on left: 12 13, on right: 28 29
offset (39)
    on left: 14 15 16, on right: 46
rsrc1 (40)
    on left: 17 18, on right: 33 35 38 41 44 52
rsrc2 (41)
    on left: 19 20, on right: 35 41 44
rdest (42)
    on left: 21 22, on right: 33 35 38 46 49 53
address (43)
    on left: 23 24 25, on right: 41 44 49 52 55
statement (44)
    on left: 26 27 28 29 30, on right: 2 3
instruction (45)
    on left: 33 35 38 41 44 46 49 52 53 55 56 57 58, on right: 5
$@1 (46)
    on left: 31, on right: 33
$@2 (47)
    on left: 32, on right: 33
$@3 (48)
    on left: 34, on right: 35
$@4 (49)
    on left: 36, on right: 38
$@5 (50)
    on left: 37, on right: 38
$@6 (51)
    on left: 39, on right: 41
$@7 (52)
    on left: 40, on right: 41
$@8 (53)
    on left: 42, on right: 44
$@9 (54)
    on left: 43, on right: 44
$@10 (55)
    on left: 45, on right: 46
$@11 (56)
    on left: 47, on right: 49
$@12 (57)
    on left: 48, on right: 49
$@13 (58)
    on left: 50, on right: 52
$@14 (59)
    on left: 51, on right: 52
$@15 (60)
    on left: 54, on right: 55
word (61)
    on left: 59 60, on right: 6
byte (62)
    on left: 61 62, on right: 7
space (63)
    on left: 63 64, on right: 8
ascii (64)
    on left: 65 66, on right: 9
asciiz (65)
    on left: 67 68, on right: 10
integers (66)
    on left: 69 70, on right: 59 70
bytes (67)
    on left: 71 72, on right: 61 72


State 0

    0 $accept: . program $end

    TEXT_SECTION   shift, and go to state 1
    DATA_SECTION   shift, and go to state 2
    LABELDECL      shift, and go to state 3
    SECTION_IDENT  shift, and go to state 4

    $default  reduce using rule 12 (labeldec)

    program     go to state 5
    statements  go to state 6
    labeldec    go to state 7
    statement   go to state 8


State 1

   26 statement: TEXT_SECTION .

    $default  reduce using rule 26 (statement)


State 2

   27 statement: DATA_SECTION .

    $default  reduce using rule 27 (statement)


State 3

   13 labeldec: LABELDECL .

    $default  reduce using rule 13 (labeldec)


State 4

   30 statement: SECTION_IDENT .

    $default  reduce using rule 30 (statement)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 9


State 6

    1 program: statements .
    3 statements: statements . NEWLINE statement

    NEWLINE  shift, and go to state 10

    $default  reduce using rule 1 (program)


State 7

   28 statement: labeldec .
   29          | labeldec . addressable

    error      shift, and go to state 11
    LABELREF   shift, and go to state 12
    ADDI       shift, and go to state 13
    ADD        shift, and go to state 14
    SUBI       shift, and go to state 15
    BRANCH     shift, and go to state 16
    BRANCHEQZ  shift, and go to state 17
    BRANCHGE   shift, and go to state 18
    BRANCHNE   shift, and go to state 19
    LOADADDR   shift, and go to state 20
    LOADBYTE   shift, and go to state 21
    LOADIMMED  shift, and go to state 22
    SYSCALL    shift, and go to state 23
    NOOP       shift, and go to state 24
    WORD       shift, and go to state 25
    BYTE       shift, and go to state 26
    SPACE      shift, and go to state 27
    ASCII      shift, and go to state 28
    ASCIIZ     shift, and go to state 29

    $end     reduce using rule 28 (statement)
    NEWLINE  reduce using rule 28 (statement)

    addressable  go to state 30
    dataelement  go to state 31
    instruction  go to state 32
    word         go to state 33
    byte         go to state 34
    space        go to state 35
    ascii        go to state 36
    asciiz       go to state 37


State 8

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    3 statements: statements NEWLINE . statement

    TEXT_SECTION   shift, and go to state 1
    DATA_SECTION   shift, and go to state 2
    LABELDECL      shift, and go to state 3
    SECTION_IDENT  shift, and go to state 4

    $default  reduce using rule 12 (labeldec)

    labeldec   go to state 7
    statement  go to state 38


State 11

   11 dataelement: error .

    $default  reduce using rule 11 (dataelement)


State 12

   58 instruction: LABELREF .

    $default  reduce using rule 58 (instruction)


State 13

   33 instruction: ADDI . $@1 rdest ',' rsrc1 $@2 ',' INTEGER

    $default  reduce using rule 31 ($@1)

    $@1  go to state 39


State 14

   35 instruction: ADD . $@3 rdest ',' rsrc1 ',' rsrc2

    $default  reduce using rule 34 ($@3)

    $@3  go to state 40


State 15

   38 instruction: SUBI . $@4 rdest ',' rsrc1 $@5 ',' INTEGER

    $default  reduce using rule 36 ($@4)

    $@4  go to state 41


State 16

   55 instruction: BRANCH . $@15 address

    $default  reduce using rule 54 ($@15)

    $@15  go to state 42


State 17

   52 instruction: BRANCHEQZ . $@13 rsrc1 ',' $@14 address

    $default  reduce using rule 50 ($@13)

    $@13  go to state 43


State 18

   41 instruction: BRANCHGE . $@6 rsrc1 ',' rsrc2 ',' $@7 address

    $default  reduce using rule 39 ($@6)

    $@6  go to state 44


State 19

   44 instruction: BRANCHNE . $@8 rsrc1 ',' rsrc2 ',' $@9 address

    $default  reduce using rule 42 ($@8)

    $@8  go to state 45


State 20

   49 instruction: LOADADDR . $@11 rdest ',' $@12 address

    $default  reduce using rule 47 ($@11)

    $@11  go to state 46


State 21

   46 instruction: LOADBYTE . $@10 rdest ',' offset

    $default  reduce using rule 45 ($@10)

    $@10  go to state 47


State 22

   53 instruction: LOADIMMED . rdest ',' INTEGER

    error     shift, and go to state 48
    REGISTER  shift, and go to state 49

    rdest  go to state 50


State 23

   56 instruction: SYSCALL .

    $default  reduce using rule 56 (instruction)


State 24

   57 instruction: NOOP .

    $default  reduce using rule 57 (instruction)


State 25

   59 word: WORD . integers
   60     | WORD . error

    error    shift, and go to state 51
    INTEGER  shift, and go to state 52

    integers  go to state 53


State 26

   61 byte: BYTE . bytes
   62     | BYTE . error

    error    shift, and go to state 54
    INTEGER  shift, and go to state 55

    bytes  go to state 56


State 27

   63 space: SPACE . INTEGER
   64      | SPACE . error

    error    shift, and go to state 57
    INTEGER  shift, and go to state 58


State 28

   65 ascii: ASCII . STRING
   66      | ASCII . error

    error   shift, and go to state 59
    STRING  shift, and go to state 60


State 29

   67 asciiz: ASCIIZ . STRING
   68       | ASCIIZ . error

    error   shift, and go to state 61
    STRING  shift, and go to state 62


State 30

   29 statement: labeldec addressable .

    $default  reduce using rule 29 (statement)


State 31

    4 addressable: dataelement .

    $default  reduce using rule 4 (addressable)


State 32

    5 addressable: instruction .

    $default  reduce using rule 5 (addressable)


State 33

    6 dataelement: word .

    $default  reduce using rule 6 (dataelement)


State 34

    7 dataelement: byte .

    $default  reduce using rule 7 (dataelement)


State 35

    8 dataelement: space .

    $default  reduce using rule 8 (dataelement)


State 36

    9 dataelement: ascii .

    $default  reduce using rule 9 (dataelement)


State 37

   10 dataelement: asciiz .

    $default  reduce using rule 10 (dataelement)


State 38

    3 statements: statements NEWLINE statement .

    $default  reduce using rule 3 (statements)


State 39

   33 instruction: ADDI $@1 . rdest ',' rsrc1 $@2 ',' INTEGER

    error     shift, and go to state 48
    REGISTER  shift, and go to state 49

    rdest  go to state 63


State 40

   35 instruction: ADD $@3 . rdest ',' rsrc1 ',' rsrc2

    error     shift, and go to state 48
    REGISTER  shift, and go to state 49

    rdest  go to state 64


State 41

   38 instruction: SUBI $@4 . rdest ',' rsrc1 $@5 ',' INTEGER

    error     shift, and go to state 48
    REGISTER  shift, and go to state 49

    rdest  go to state 65


State 42

   55 instruction: BRANCH $@15 . address

    error     shift, and go to state 66
    INTEGER   shift, and go to state 67
    LABELREF  shift, and go to state 68

    address  go to state 69


State 43

   52 instruction: BRANCHEQZ $@13 . rsrc1 ',' $@14 address

    error     shift, and go to state 70
    REGISTER  shift, and go to state 71

    rsrc1  go to state 72


State 44

   41 instruction: BRANCHGE $@6 . rsrc1 ',' rsrc2 ',' $@7 address

    error     shift, and go to state 70
    REGISTER  shift, and go to state 71

    rsrc1  go to state 73


State 45

   44 instruction: BRANCHNE $@8 . rsrc1 ',' rsrc2 ',' $@9 address

    error     shift, and go to state 70
    REGISTER  shift, and go to state 71

    rsrc1  go to state 74


State 46

   49 instruction: LOADADDR $@11 . rdest ',' $@12 address

    error     shift, and go to state 48
    REGISTER  shift, and go to state 49

    rdest  go to state 75


State 47

   46 instruction: LOADBYTE $@10 . rdest ',' offset

    error     shift, and go to state 48
    REGISTER  shift, and go to state 49

    rdest  go to state 76


State 48

   22 rdest: error .

    $default  reduce using rule 22 (rdest)


State 49

   21 rdest: REGISTER .

    $default  reduce using rule 21 (rdest)


State 50

   53 instruction: LOADIMMED rdest . ',' INTEGER

    ','  shift, and go to state 77


State 51

   60 word: WORD error .

    $default  reduce using rule 60 (word)


State 52

   69 integers: INTEGER .

    $default  reduce using rule 69 (integers)


State 53

   59 word: WORD integers .
   70 integers: integers . INTEGER

    INTEGER  shift, and go to state 78

    $default  reduce using rule 59 (word)


State 54

   62 byte: BYTE error .

    $default  reduce using rule 62 (byte)


State 55

   71 bytes: INTEGER .

    $default  reduce using rule 71 (bytes)


State 56

   61 byte: BYTE bytes .
   72 bytes: bytes . INTEGER

    INTEGER  shift, and go to state 79

    $default  reduce using rule 61 (byte)


State 57

   64 space: SPACE error .

    $default  reduce using rule 64 (space)


State 58

   63 space: SPACE INTEGER .

    $default  reduce using rule 63 (space)


State 59

   66 ascii: ASCII error .

    $default  reduce using rule 66 (ascii)


State 60

   65 ascii: ASCII STRING .

    $default  reduce using rule 65 (ascii)


State 61

   68 asciiz: ASCIIZ error .

    $default  reduce using rule 68 (asciiz)


State 62

   67 asciiz: ASCIIZ STRING .

    $default  reduce using rule 67 (asciiz)


State 63

   33 instruction: ADDI $@1 rdest . ',' rsrc1 $@2 ',' INTEGER

    ','  shift, and go to state 80


State 64

   35 instruction: ADD $@3 rdest . ',' rsrc1 ',' rsrc2

    ','  shift, and go to state 81


State 65

   38 instruction: SUBI $@4 rdest . ',' rsrc1 $@5 ',' INTEGER

    ','  shift, and go to state 82


State 66

   25 address: error .

    $default  reduce using rule 25 (address)


State 67

   23 address: INTEGER .

    $default  reduce using rule 23 (address)


State 68

   24 address: LABELREF .

    $default  reduce using rule 24 (address)


State 69

   55 instruction: BRANCH $@15 address .

    $default  reduce using rule 55 (instruction)


State 70

   18 rsrc1: error .

    $default  reduce using rule 18 (rsrc1)


State 71

   17 rsrc1: REGISTER .

    $default  reduce using rule 17 (rsrc1)


State 72

   52 instruction: BRANCHEQZ $@13 rsrc1 . ',' $@14 address

    ','  shift, and go to state 83


State 73

   41 instruction: BRANCHGE $@6 rsrc1 . ',' rsrc2 ',' $@7 address

    ','  shift, and go to state 84


State 74

   44 instruction: BRANCHNE $@8 rsrc1 . ',' rsrc2 ',' $@9 address

    ','  shift, and go to state 85


State 75

   49 instruction: LOADADDR $@11 rdest . ',' $@12 address

    ','  shift, and go to state 86


State 76

   46 instruction: LOADBYTE $@10 rdest . ',' offset

    ','  shift, and go to state 87


State 77

   53 instruction: LOADIMMED rdest ',' . INTEGER

    INTEGER  shift, and go to state 88


State 78

   70 integers: integers INTEGER .

    $default  reduce using rule 70 (integers)


State 79

   72 bytes: bytes INTEGER .

    $default  reduce using rule 72 (bytes)


State 80

   33 instruction: ADDI $@1 rdest ',' . rsrc1 $@2 ',' INTEGER

    error     shift, and go to state 70
    REGISTER  shift, and go to state 71

    rsrc1  go to state 89


State 81

   35 instruction: ADD $@3 rdest ',' . rsrc1 ',' rsrc2

    error     shift, and go to state 70
    REGISTER  shift, and go to state 71

    rsrc1  go to state 90


State 82

   38 instruction: SUBI $@4 rdest ',' . rsrc1 $@5 ',' INTEGER

    error     shift, and go to state 70
    REGISTER  shift, and go to state 71

    rsrc1  go to state 91


State 83

   52 instruction: BRANCHEQZ $@13 rsrc1 ',' . $@14 address

    $default  reduce using rule 51 ($@14)

    $@14  go to state 92


State 84

   41 instruction: BRANCHGE $@6 rsrc1 ',' . rsrc2 ',' $@7 address

    error     shift, and go to state 93
    REGISTER  shift, and go to state 94

    rsrc2  go to state 95


State 85

   44 instruction: BRANCHNE $@8 rsrc1 ',' . rsrc2 ',' $@9 address

    error     shift, and go to state 93
    REGISTER  shift, and go to state 94

    rsrc2  go to state 96


State 86

   49 instruction: LOADADDR $@11 rdest ',' . $@12 address

    $default  reduce using rule 48 ($@12)

    $@12  go to state 97


State 87

   46 instruction: LOADBYTE $@10 rdest ',' . offset

    error    shift, and go to state 98
    INTEGER  shift, and go to state 99
    '('      shift, and go to state 100

    offset  go to state 101


State 88

   53 instruction: LOADIMMED rdest ',' INTEGER .

    $default  reduce using rule 53 (instruction)


State 89

   33 instruction: ADDI $@1 rdest ',' rsrc1 . $@2 ',' INTEGER

    $default  reduce using rule 32 ($@2)

    $@2  go to state 102


State 90

   35 instruction: ADD $@3 rdest ',' rsrc1 . ',' rsrc2

    ','  shift, and go to state 103


State 91

   38 instruction: SUBI $@4 rdest ',' rsrc1 . $@5 ',' INTEGER

    $default  reduce using rule 37 ($@5)

    $@5  go to state 104


State 92

   52 instruction: BRANCHEQZ $@13 rsrc1 ',' $@14 . address

    error     shift, and go to state 66
    INTEGER   shift, and go to state 67
    LABELREF  shift, and go to state 68

    address  go to state 105


State 93

   20 rsrc2: error .

    $default  reduce using rule 20 (rsrc2)


State 94

   19 rsrc2: REGISTER .

    $default  reduce using rule 19 (rsrc2)


State 95

   41 instruction: BRANCHGE $@6 rsrc1 ',' rsrc2 . ',' $@7 address

    ','  shift, and go to state 106


State 96

   44 instruction: BRANCHNE $@8 rsrc1 ',' rsrc2 . ',' $@9 address

    ','  shift, and go to state 107


State 97

   49 instruction: LOADADDR $@11 rdest ',' $@12 . address

    error     shift, and go to state 66
    INTEGER   shift, and go to state 67
    LABELREF  shift, and go to state 68

    address  go to state 108


State 98

   16 offset: error .

    $default  reduce using rule 16 (offset)


State 99

   14 offset: INTEGER . '(' REGISTER ')'

    '('  shift, and go to state 109


State 100

   15 offset: '(' . REGISTER ')'

    REGISTER  shift, and go to state 110


State 101

   46 instruction: LOADBYTE $@10 rdest ',' offset .

    $default  reduce using rule 46 (instruction)


State 102

   33 instruction: ADDI $@1 rdest ',' rsrc1 $@2 . ',' INTEGER

    ','  shift, and go to state 111


State 103

   35 instruction: ADD $@3 rdest ',' rsrc1 ',' . rsrc2

    error     shift, and go to state 93
    REGISTER  shift, and go to state 94

    rsrc2  go to state 112


State 104

   38 instruction: SUBI $@4 rdest ',' rsrc1 $@5 . ',' INTEGER

    ','  shift, and go to state 113


State 105

   52 instruction: BRANCHEQZ $@13 rsrc1 ',' $@14 address .

    $default  reduce using rule 52 (instruction)


State 106

   41 instruction: BRANCHGE $@6 rsrc1 ',' rsrc2 ',' . $@7 address

    $default  reduce using rule 40 ($@7)

    $@7  go to state 114


State 107

   44 instruction: BRANCHNE $@8 rsrc1 ',' rsrc2 ',' . $@9 address

    $default  reduce using rule 43 ($@9)

    $@9  go to state 115


State 108

   49 instruction: LOADADDR $@11 rdest ',' $@12 address .

    $default  reduce using rule 49 (instruction)


State 109

   14 offset: INTEGER '(' . REGISTER ')'

    REGISTER  shift, and go to state 116


State 110

   15 offset: '(' REGISTER . ')'

    ')'  shift, and go to state 117


State 111

   33 instruction: ADDI $@1 rdest ',' rsrc1 $@2 ',' . INTEGER

    INTEGER  shift, and go to state 118


State 112

   35 instruction: ADD $@3 rdest ',' rsrc1 ',' rsrc2 .

    $default  reduce using rule 35 (instruction)


State 113

   38 instruction: SUBI $@4 rdest ',' rsrc1 $@5 ',' . INTEGER

    INTEGER  shift, and go to state 119


State 114

   41 instruction: BRANCHGE $@6 rsrc1 ',' rsrc2 ',' $@7 . address

    error     shift, and go to state 66
    INTEGER   shift, and go to state 67
    LABELREF  shift, and go to state 68

    address  go to state 120


State 115

   44 instruction: BRANCHNE $@8 rsrc1 ',' rsrc2 ',' $@9 . address

    error     shift, and go to state 66
    INTEGER   shift, and go to state 67
    LABELREF  shift, and go to state 68

    address  go to state 121


State 116

   14 offset: INTEGER '(' REGISTER . ')'

    ')'  shift, and go to state 122


State 117

   15 offset: '(' REGISTER ')' .

    $default  reduce using rule 15 (offset)


State 118

   33 instruction: ADDI $@1 rdest ',' rsrc1 $@2 ',' INTEGER .

    $default  reduce using rule 33 (instruction)


State 119

   38 instruction: SUBI $@4 rdest ',' rsrc1 $@5 ',' INTEGER .

    $default  reduce using rule 38 (instruction)


State 120

   41 instruction: BRANCHGE $@6 rsrc1 ',' rsrc2 ',' $@7 address .

    $default  reduce using rule 41 (instruction)


State 121

   44 instruction: BRANCHNE $@8 rsrc1 ',' rsrc2 ',' $@9 address .

    $default  reduce using rule 44 (instruction)


State 122

   14 offset: INTEGER '(' REGISTER ')' .

    $default  reduce using rule 14 (offset)
